name: Build SASL Library for iOS

on:
  workflow_call:
    outputs:
      cache-key:
        description: "Cache key for SASL build"
        value: ${{ jobs.build-sasl.outputs.cache-key }}
      artifact-name:
        description: "Artifact name for SASL build"
        value: ${{ jobs.build-sasl.outputs.artifact-name }}
  workflow_dispatch:

env:
  IOS_DEPLOYMENT_TARGET: "13.0"

jobs:
  build-sasl:
    runs-on: macos-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
      artifact-name: sasl-ios
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -version

    - name: Install dependencies
      run: |
        brew install autoconf automake libtool

    - name: Generate cache key
      id: cache-key
      run: |
        echo "key=sasl-${{ runner.os }}-${{ hashFiles('BuildSASL/build.sh') }}-$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Cache SASL build
      id: cache-sasl
      uses: actions/cache@v4
      with:
        path: BuildSASL/output
        key: ${{ steps.cache-key.outputs.key }}
        restore-keys: |
          sasl-${{ runner.os }}-

    - name: Build SASL library
      if: steps.cache-sasl.outputs.cache-hit != 'true'
      working-directory: BuildSASL
      run: |
        set -ex
        
        # Clone Cyrus SASL
        git clone https://github.com/cyrusimap/cyrus-sasl.git
        WORKDING_DIR="$(pwd)/cyrus-sasl"
        
        if [ ! -d "$WORKDING_DIR" ]; then
            mkdir -p "$WORKDING_DIR"
        fi
        
        cd "$WORKDING_DIR"
        WORKDING_DIR=$(pwd)
        
        git clean -fdx
        
        # Setup iOS build environment
        OUTPUT_PATH=$(realpath ../output)
        export CFLAGS="-Wall -arch arm64 -miphoneos-version-min=${{ env.IOS_DEPLOYMENT_TARGET }} -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk"
        
        # Configure and build
        ./autogen.sh --prefix="$OUTPUT_PATH" \
            --host=aarch64-apple-darwin --with-staticsasl
        make install DESTDIR=$(realpath ../output)
        
        cd ..
        
        # Move built files to the correct location
        mv output/**/cyrus-sasl/build/* output/ || true

    - name: Verify SASL build
      run: |
        ls -la BuildSASL/output/lib/ || echo "No lib directory found"
        ls -la BuildSASL/output/include/ || echo "No include directory found"
        echo "SASL libraries:"
        find BuildSASL/output -name "*.a" -type f | head -5

    - name: Upload SASL artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sasl-ios
        path: BuildSASL/output/
        retention-days: 1